

# Part 1: Design API for liking and unliking a post

def like_post(post_id, liker_id):
    let post = get_post(post_id)
    post.liked_by.append(liker_id)

    let poster_id = post.poster_id
    notify(post.poster_id, post_id)

    let liker = get_user(liker_id)
    liker.liked_posts.append(post_id)


def unlike_post(post_id, liker_id):
    ...

# Part 2: Make the likes consistent

Optimistic / Pessimistic lock
post_likes.lock()

Compare and Swap / Atomic operation
post_likes...



# Part 3: API to find previously liked posts

def get_liked_posts(liker_id):
    return liker.liked_posts

# Part 4: Notify the poster of likes, of who liked the post and which post

def notify(poster_id, post_id):
    poster = get_user(poster_id)

    # curr_notifs = [(post_id got 7 likes)] => [(post_id, 7)]
    
    if post_id not in poster.curr_notifs:
        curr_notifs.append(notif)
    else:
        increment number of people liking 

